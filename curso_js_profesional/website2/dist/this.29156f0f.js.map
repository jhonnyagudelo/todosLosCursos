{"version":3,"sources":["ejercicio/this/index.js"],"names":["whoIsThis","console","log","perro","nombre","saludar","Persona","constructor","edad","aumentarEdad","setInterval","fili"],"mappings":"AAAA;AAEA;AACA;AAEA,SAASA,SAAT,GAAqB;AACnB,SAAO,IAAP;AACD;;AAEDC,OAAO,CAACC,GAAR,CAAa,cAAaF,SAAS,EAAG,EAAtC,GAEA;AACA;;AACA,IAAIG,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,MADE;AAEVC,EAAAA,OAAO,EAAE,YAAY;AACnB,WAAQ,iBAAgB,KAAKD,MAAO,EAApC;AACD;AAJS,CAAZ;AAOAD,KAAK,CAACE,OAAN,IAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,GAAG;AACZ,SAAKC,IAAL,GAAY,CAAZ;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACbC,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKF,IAAL;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,IAAjB;AACD,KAHU,EAGR,IAHQ,CAAX;AAID;;AAVW;;AAad,IAAIG,IAAI,GAAG,IAAIL,OAAJ,EAAX","file":"this.29156f0f.js","sourceRoot":"..","sourcesContent":["//this en el scope global\n\n//console.log(`this: ${this}`);\n//this en el scope de una funcion\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(` whoIsThis ${whoIsThis()}`);\n\n//this dentro de un método\n//Si this esta dentro de una función, pero esta función pertenece a un objeto, su valor cambia.\nlet perro = {\n  nombre: \"Kira\",\n  saludar: function () {\n    return `Hola me llamo ${this.nombre}`;\n  },\n};\n\nperro.saludar();\n\n//This dentro de un constructor:\n//En este caso, this se refiere al objeto instanciado.\n\n//class Persona {\n//constructor(nombre, edad) {\n//this.nombre = nombre;\n//this.edad = edad;\n//}\n//}\n\n//let amigo = new Persona(\"Mario\", 50);\n//let hermana = new Persona(\"Claudia\", 27);\n//let madre = new Persona(\"María\", 60);\n\n//this en un arrow function:\n//Las arrow functions tienen algo llamado Lexical this, que nos permiten con this llegar a un nivel superior de la función.\n\n//Por ejemplo si nosotros tenemos la clase Persona, y queremos aumentar su edad cada segundo, usamos el siguiente código´\n\nclass Persona {\n  constructor() {\n    this.edad = 0;\n  }\n\n  aumentarEdad() {\n    setInterval(() => {\n      this.edad++;\n      console.log(this.edad);\n    }, 1000);\n  }\n}\n\nlet fili = new Persona();\n"]}