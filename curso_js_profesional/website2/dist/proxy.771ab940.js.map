{"version":3,"sources":["ejercicio/proxy/index.js"],"names":["target","red","green","blue","handler","get","obj","prop","suggestion","Object","keys","find","key","Levenshtein","console","log","p","Proxy"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA,MAAMA,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,MADQ;AAEbC,EAAAA,KAAK,EAAE,OAFM;AAGbC,EAAAA,IAAI,EAAE;AAHO,CAAf;AAMA,MAAMC,OAAO,GAAG;AACdC,EAAAA,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAY;AACb,QAAIA,IAAI,IAAID,GAAZ,EAAiB;AACf,aAAOA,GAAG,CAACC,IAAD,CAAV;AACD;;AAED,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,IAAjB,CAAuBC,GAAD,IAAS;AAChD,aAAOC,WAAW,CAACR,GAAZ,CAAgBO,GAAhB,EAAqBL,IAArB,KAA8B,CAArC;AACD,KAFkB,CAAnB;;AAIA,QAAIC,UAAJ,EAAgB;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAER,IAAK,mCAAkCC,UAAW,GAAjE;AACD;;AAED,WAAOF,GAAG,CAACC,IAAD,CAAV;AACD;;AAfa,CAAhB;AAkBA,MAAMS,CAAC,GAAG,IAAIC,KAAJ,CAAUjB,MAAV,EAAkBI,OAAlB,CAAV","file":"proxy.771ab940.js","sourceRoot":"..","sourcesContent":["// Proxy es parecido a getters y setters\n// Usa un concepto que se llama traps: son interceptores de llamadas. A diferencia de getters, no opera sobre una propieda, si no sobre un objeto.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#Methods_of_the_handler_object\n\n// Creemos un ejemplo donde interceptamos llamadas para leer una propiedad\n// Si la propiedad existe, la regresamos\n// Si no existe, entonces sugerimos una que pueda funcionar\n\n// Para eso eso vamos a usar un algoritmo que se llama Levenshtein. (window.Levenshtein.get)\n// Ejemplos de levenshtein distance (usa window.Levenshtein)\n\nconst target = {\n  red: \"Rojo\",\n  green: \"Verde\",\n  blue: \"Azul\",\n};\n\nconst handler = {\n  get(obj, prop) {\n    if (prop in obj) {\n      return obj[prop];\n    }\n\n    const suggestion = Object.keys(obj).find((key) => {\n      return Levenshtein.get(key, prop) <= 3;\n    });\n\n    if (suggestion) {\n      console.log(`${prop} no se encontrÃ³. Quisiste decir ${suggestion}?`);\n    }\n\n    return obj[prop];\n  },\n};\n\nconst p = new Proxy(target, handler);\n"]}